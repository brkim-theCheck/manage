/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2020-11-09 07:08:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.tiles.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<script src=\"/lib/bootstrap/js/jquery-3.5.1.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("  let usrNm = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.SPRING_SECURITY_CONTEXT.authentication.principal.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("  let usrId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.SPRING_SECURITY_CONTEXT.authentication.principal.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("  $(document).ready(function () {\n");
      out.write("    var now = new Date();\n");
      out.write("    var year = now.getFullYear();\n");
      out.write("    var month = now.getMonth() + 1;    //1월이 0으로 되기때문에 +1을 함.\n");
      out.write("    var date = now.getDate();\n");
      out.write("    var week = new Array('일', '월', '화', '수', '목', '금', '토');\n");
      out.write("\n");
      out.write("    if((month + \"\").length < 2){        //2자리가 아니면 0을 붙여줌.\n");
      out.write("        month = \"0\" + month;\n");
      out.write("    }else{\n");
      out.write("         // \"\"을 빼면 year + month (숫자+숫자) 됨.. ex) 2018 + 12 = 2030이 리턴됨.\n");
      out.write("        month = \"\" + month;\n");
      out.write("    }\n");
      out.write("    var today = year + \"년 \" + month + \"월 \" + date + \"일 \" + week[now.getDay()] + \"요일\";\n");
      out.write("\n");
      out.write("    $(\".toggle-title-date\").text(today);\n");
      out.write("  });\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write("  .sidebar-btn{\n");
      out.write("    color: white !important\n");
      out.write("  }\n");
      out.write("\n");
      out.write("\n");
      out.write("  .topbar-bg-custom {\n");
      out.write("    background: repeating-linear-gradient(360deg, #091a3f, rgb(0, 28, 203) 88.66%, #0073ea);\n");
      out.write("    mix-blend-mode: normal;\n");
      out.write("    opacity: 0.84;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  .toggle-title {\n");
      out.write("    font-family: Apple SD Gothic Neo;\n");
      out.write("    font-style: normal;\n");
      out.write("    font-weight: normal;\n");
      out.write("    font-size: 24px;\n");
      out.write("    line-height: 29px;\n");
      out.write("    /* identical to box height */\n");
      out.write("\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    letter-spacing: -0.0461538px;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  .toggle-title-date {\n");
      out.write("    font-family: Apple SD Gothic Neo;\n");
      out.write("    font-style: normal;\n");
      out.write("    font-weight: normal;\n");
      out.write("    font-size: 24px;\n");
      out.write("    line-height: 29px;\n");
      out.write("    /* identical to box height */\n");
      out.write("\n");
      out.write("    text-align: right;\n");
      out.write("    text-transform: uppercase;\n");
      out.write("  }\n");
      out.write("</style>\n");
      out.write("<!-- Topbar -->\n");
      out.write("<nav class=\"navbar navbar-expand navbar-light topbar-bg-custom topbar static-top shadow\">\n");
      out.write("\n");
      out.write("  <!-- Sidebar Toggle (Topbar) -->\n");
      out.write("  <form class=\"form-inline\">\n");
      out.write("    <div id=\"sidebarToggle\" class=\"btn btn-link sidebar-btn\">\n");
      out.write("      <i class=\"fa fa-bars\"></i>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"mr-2\">\n");
      out.write("      <span class=\"text-white toggle-title\">랜딩페이지 배정 관리자</span>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"topbar-divider d-none d-sm-block\" style=\"height:calc(4.375rem - 3rem) !important;\"></div>\n");
      out.write("    <div class=\"mr-2\">\n");
      out.write("      <span class=\"text-white toggle-title-date\"></span>\n");
      out.write("    </div>\n");
      out.write("  </form>\n");
      out.write("\n");
      out.write("  <!-- Topbar Navbar -->\n");
      out.write("  <ul class=\"navbar-nav ml-auto\">\n");
      out.write("\n");
      out.write("    <!-- Nav Item - Search Dropdown (Visible Only XS) -->\n");
      out.write("    <li class=\"nav-item dropdown no-arrow d-sm-none\">\n");
      out.write("      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("        <i class=\"fas fa-search fa-fw\"></i>\n");
      out.write("      </a>\n");
      out.write("    </li>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <!-- Nav Item - Messages -->\n");
      out.write("    <li class=\"nav-item dropdown no-arrow mx-1\">\n");
      out.write("      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("        <i class=\"fas fa-envelope fa-plus\"></i>\n");
      out.write("      </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item dropdown no-arrow mx-1\">\n");
      out.write("      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("        <i class=\"fas fa-envelope fa-fw\"></i>\n");
      out.write("      </a>\n");
      out.write("    </li>\n");
      out.write("    <li class=\"nav-item dropdown no-arrow mx-1\">\n");
      out.write("      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("        <i class=\"fas fa-envelope fa-fw\"></i>\n");
      out.write("      </a>\n");
      out.write("    </li>\n");
      out.write("\n");
      out.write("    <div class=\"topbar-divider d-none d-sm-block\"></div>\n");
      out.write("\n");
      out.write("    <!-- Nav Item - User Information -->\n");
      out.write("    <li class=\"nav-item dropdown no-arrow\">\n");
      out.write("      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("        <span class=\"mr-2 d-none d-lg-inline text-white small\"> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.SPRING_SECURITY_CONTEXT.authentication.principal.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\n");
      out.write("        <img class=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\">\n");
      out.write("      </a>\n");
      out.write("      <!-- Dropdown - User Information -->\n");
      out.write("      <div class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n");
      out.write("        <a class=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n");
      out.write("          <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n");
      out.write("          Logout\n");
      out.write("        </a>\n");
      out.write("      </div>\n");
      out.write("    </li>\n");
      out.write("\n");
      out.write("  </ul>\n");
      out.write("\n");
      out.write("</nav>\n");
      out.write("<!-- End of Topbar -->");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
